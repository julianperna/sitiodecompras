{"version":3,"sources":["Componentes/FichaProducto.js","Componentes/Producto.js","Componentes/Carro.js","Componentes/Navegacion.js","App.js","serviceWorker.js","index.js"],"names":["FichaProducto","props","_this","Object","classCallCheck","this","_super","call","state","modal","listaCarrito","stock","toggle","bind","assertThisInitialized","agregarCarrito","setState","prevState","push","titulo","precio","alert","document","getElementById","innerText","length","react_default","a","createElement","Container","Button","color","onClick","Modal","isOpen","ModalHeader","ModalBody","CardImg","src","imagen","descripcion","ModalFooter","className","React","Component","Producto","Col","sm","Card","body","outline","CardBody","CardTitle","CardSubtitle","CardText","src_Componentes_FichaProducto","Carro","popoverOpen","total","map","parseInt","arregloCarrito","i","id","Badge","Popover","placement","target","PopoverHeader","PopoverBody","Table","Intl","NumberFormat","format","sumaTotal","Navegacion","Navbar","light","expand","NavbarBrand","href","Nav","navbar","NavItem","Componentes_Carro","console","log","listaProductos","App","arregloComponentes","src_Componentes_Producto","key","Componentes_Navegacion","Row","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d19b8a16.chunk.js","sourcesContent":["import React from 'react';\r\nimport {CardImg,Modal,ModalHeader,ModalBody,ModalFooter,Container,Button} from 'reactstrap'\r\nimport {listaCarrito} from '../listaCarrito.json'\r\nclass FichaProducto extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      modal: false,\r\n      listaCarrito,\r\n      stock: props.props.stock\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n    this.agregarCarrito=this.agregarCarrito.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState((prevState) => ({\r\n      modal: !prevState.modal,\r\n    }));\r\n  }\r\n  agregarCarrito() {\r\n    listaCarrito.push({\r\n      \"titulo\": this.props.props.titulo,\r\n      \"precio\": this.props.props.precio\r\n      \r\n    });\r\n   this.setState(prevState => ({\r\n     modal: !prevState.modal,\r\n   }));\r\n   \r\n   if (this.state.stock != 0){\r\n   this.setState((prevState) => ({\r\n     stock: prevState.stock -1\r\n   }));\r\n   } else{\r\n     alert(\"STOCK AGOTADO\")\r\n   }\r\n   const badge= document.getElementById(\"Badge1\");\r\n   badge.innerText=listaCarrito.length;\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Button color=\"info\" onClick={this.toggle}>\r\n          Ver Ficha\r\n        </Button>\r\n        <Modal isOpen={this.state.modal}>\r\n          <ModalHeader>{this.props.props.titulo}</ModalHeader>\r\n          <ModalBody>\r\n            <CardImg src={this.props.props.imagen} />\r\n            <p>El detalle del producto seleccionado es el siguiente: </p>\r\n            {this.props.props.descripcion}\r\n            <p>\r\n              Este producto tiene un valor de <b>{this.props.props.precio}</b>{\" \"}\r\n              pesos.\r\n            </p>\r\n            <p>\r\n              Hay <b>{this.state.stock}</b> unidades de este producto\r\n              disponibles.\r\n            </p>\r\n          </ModalBody>\r\n          <ModalFooter className=\"modalcenter\">\r\n            <Button color=\"primary\" onClick={this.agregarCarrito}>\r\n              Agregar al carrito\r\n            </Button>\r\n            <Button color=\"info\" onClick={this.toggle}>\r\n              Volver atr√°s\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default FichaProducto;","import React from 'react';\r\nimport {CardText,CardSubtitle,CardTitle,CardBody,CardImg,Col,Card} from 'reactstrap';\r\nimport './Producto.css';\r\nimport \"./FichaProducto.css\";\r\nimport FichaProducto from './FichaProducto'\r\n\r\n\r\nclass  Producto extends React.Component{\r\n   render(){\r\n\r\n     return(\r\n       <Col sm=\"4\">\r\n       <Card className=\"Card\" body outline color=\"primary\" >\r\n  <CardImg src={this.props.imagen} />\r\n    <CardBody>\r\n  <CardTitle>{this.props.titulo}</CardTitle>\r\n  <CardSubtitle><b>Valor: </b>{this.props.precio} </CardSubtitle>\r\n  <CardText>{this.props.descripcion} </CardText>\r\n<FichaProducto props={this.props}/>\r\n    </CardBody>\r\n         </Card>\r\n       </Col>\r\n     );\r\n   }\r\n }\r\n export default Producto;","import React from 'react';\r\nimport {Popover,PopoverHeader,PopoverBody,Table,Badge,Button} from 'reactstrap'\r\nimport {listaCarrito} from '../listaCarrito.json'\r\n\r\nclass Carro extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      popoverOpen: false,\r\n      listaCarrito,\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState((prevState) => ({\r\n      popoverOpen: !prevState.popoverOpen,\r\n    }));\r\n  }\r\n  sumaTotal() {\r\n    let total = 0;\r\n    let sumaTotal = this.state.listaCarrito.map((listaCarrito) => {\r\n      total += parseInt(listaCarrito.precio) * 1000;\r\n    });\r\n\r\n    return (total);\r\n  }\r\n  render() {\r\n    const arregloCarrito = this.state.listaCarrito.map((listaCarrito, i) => {\r\n      return (\r\n        <tr>\r\n          <td>{(i += 1)}</td>\r\n          <td>{listaCarrito.titulo}</td>\r\n          <td>{listaCarrito.precio}</td>\r\n        </tr>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <Button id=\"Popover1\" color=\"info\">\r\n          <span className=\"material-icons\">shopping_cart</span>\r\n          <Badge color=\"secondary\" id=\"Badge1\">{listaCarrito.length}</Badge>\r\n        </Button>\r\n        <Popover\r\n          placement=\"bottom\"\r\n          isOpen={this.state.popoverOpen}\r\n          target=\"Popover1\"\r\n          toggle={this.toggle}\r\n        >\r\n          <PopoverHeader>Listado de compras</PopoverHeader>\r\n          <PopoverBody>\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Producto</th>\r\n                  <th>Precio</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>{arregloCarrito}</tbody>\r\n              <tfoot>\r\n                <tr>\r\n                  <td>Total: </td>\r\n                  <td></td>\r\n                  <td>\r\n                    {Intl.NumberFormat(\"de-DE\").format(this.sumaTotal())} AR\r\n                  </td>\r\n                </tr>\r\n              </tfoot>\r\n            </Table>\r\n          </PopoverBody>\r\n        </Popover>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Carro;\r\n","import React from 'react';\r\nimport{NavItem,Nav,NavbarBrand,Navbar} from 'reactstrap';\r\nimport Carro from './Carro'\r\n\r\nclass Navegacion extends React.Component{\r\n  render(){\r\n    return (\r\n      <Navbar color=\"light\" light expand=\"mr\">\r\n        <NavbarBrand href=\"/\">{this.props.titulo}</NavbarBrand>\r\n        <Nav className=\"mr-auto\" navbar>\r\n          <NavItem>\r\n            <Carro />\r\n          </NavItem>\r\n        </Nav>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\nexport default Navegacion","import React from 'react';\r\nimport Producto from './Componentes/Producto';\r\nimport {Container, Row} from 'reactstrap';\r\nimport Navegacion from './Componentes/Navegacion';\r\nimport './App.css';\r\nimport {listaProductos} from'./Componentes/listaProductos.json'\r\n console.log(listaProductos);\r\nclass  App extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      listaProductos,\r\n      \r\n    }\r\n  }\r\n  render(){\r\nconst arregloComponentes=this.state.listaProductos.map((listaProductos,i)=>{\r\n  return(\r\n    <Producto\r\n    key={i}\r\n    titulo={listaProductos.titulo}\r\n    imagen={listaProductos.imagen}\r\n    descripcion={listaProductos.descripcion}\r\n    precio={listaProductos.precio}\r\n    stock={listaProductos.stock}\r\n    />\r\n  )\r\n})\r\n\r\n\r\n \r\n\r\n    return (\r\n        <Container>\r\n          <Navegacion  className=\"mr-auto\"  titulo=\"Mi primer sitio de compras  en React\"/>\r\n          <Row>\r\n         {arregloComponentes}\r\n          </Row>\r\n        </Container>\r\n    );\r\n  }\r\n} \r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}